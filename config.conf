# Set the path to the repo root folder
# I set /home because I'm working within a Docker container
BASEDIR=/home

# TOOLS AND LIBRARIES DOWNLOAD DIRECTORY - add to gitignore too
DOWNLOAD_DIR="$BASEDIR/tools"

# BUILD DIRECTORY WHERE ALL THE BUILD ARTIFACTS WILL BE - add to gitignore too
BUILD_DIR="$BASEDIR/output"

###############################################################################
################################	NDK	     ##################################
###############################################################################

#NDK Version to download
NDK_VERSION=r13b

#The URL from which to download Android NDK
NDK_DOWNLOAD_URL="https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip"

#The name of the folder created by executing the downloaded NDK bin
#In general, the name corresponds to that of the bin file, except the platform info
NDK_DIR_NAME="android-ndk-$NDK_VERSION"

###############################################################################
##########################	    SDK TOOLS	    ###############################
###############################################################################

# SDK Tools Version to download
SDK_TOOLS_VERSION=r25.2.5

# The URL from which to download Android SDK
SDK_DOWNLOAD_URL="https://dl.google.com/android/repository/tools_$SDK_TOOLS_VERSION-linux.zip"

# The name of the folder created by untarring the SDK archive
SDK_DIR_NAME="android-sdk-linux"

###############################################################################
##############################      PJSIP       ###############################
###############################################################################

# PJSIP Version to download
PJSIP_VERSION=2.8

# The URL from which to download PJSIP sources tag
PJSIP_DOWNLOAD_URL="http://www.pjsip.org/release/$PJSIP_VERSION/pjproject-$PJSIP_VERSION.tar.bz2"

# The name of the folder generated when untarring PJSIP sources file
# In general, the name corresponds to that of the tar, except the file extension
PJSIP_DIR_NAME="pjproject-$PJSIP_VERSION"

# The output directory where to store PJSIP compiled libraries
PJSIP_BUILD_OUT_PATH="$BUILD_DIR/pjsip-build-output"

###############################################################################
###############################      SWIG       ###############################
###############################################################################

# SWIG Tool Version to download
SWIG_VERSION=3.0.12

# The URL from which to download SWIG sources tar
SWIG_DOWNLOAD_URL="http://prdownloads.sourceforge.net/swig/swig-$SWIG_VERSION.tar.gz"

# The name of the folder generated when untarring SWIG sources file
# In general, the name corresponds to that of the tar, except the file extension
SWIG_DIR_NAME="swig-$SWIG_VERSION"

###############################################################################
##############################      OPENSSL       #############################
###############################################################################

# OPENSSL Version to download
OPENSSL_VERSION=1.0.2g

# The URL from which to download OpenSSL sources tag
OPENSSL_DOWNLOAD_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

# The name of the folder generated when untarring OpenSSL sources file
# In general, the name corresponds to that of the tar, except the file extension
OPENSSL_DIR_NAME="openssl-$OPENSSL_VERSION"

# the output directory where to store OpenSSL compiled libraries
OPENSSL_BUILD_OUT_PATH="$BUILD_DIR/openssl-build-output"

# Configure the target NDK toolchain to use when compiling OpenH264
OPENSSL_TARGET_NDK_LEVEL=23

###############################################################################
#############################      OPENH264       ############################# 
###############################################################################

# OPENH264 Version to download
OPENH264_VERSION=1.8.0

# The URL from which to download OpenH264 sources tag
OPENH264_DOWNLOAD_URL="https://github.com/cisco/openh264/archive/v$OPENH264_VERSION.tar.gz"

# The name of the folder generated when untarring OpenH264 sources file
# In general, the name corresponds to that of the tar, except the file extension
OPENH264_DIR_NAME="openh264-$OPENH264_VERSION"

# The output directory where to store OpenH264 compiled libraries
OPENH264_BUILD_OUT_PATH="$BUILD_DIR/openh264-build-output"

# Configure the target NDK toolchain to use when compiling OpenH264
OPENH264_TARGET_NDK_LEVEL=23

# OPUS Version to download
OPUS_VERSION=1.2.1

# The URL of the Opus repository
OPUS_DOWNLOAD_URL="https://archive.mozilla.org/pub/opus/opus-$OPUS_VERSION.tar.gz"

# The name of the folder generated when untarring OPUS sources file
OPUS_DIR_NAME="opus-$OPUS_VERSION"

# The output directory where to store OPUS compiled libraries
OPUS_BUILD_OUT_PATH="$BUILD_DIR/opus-build-output"

###############################################################################
############################      TARGET ABI       ############################
###############################################################################

# Target architectures that you want to build
# Refer to the official NDK docs: https://developer.android.com/ndk/guides/abis.html#sa
# Build only for "armeabi" "armeabi-v7a" "x86" as these are the only architectures
# for which all the libraries are build without problems. You can comment this line and
# uncomment the following one if you want to build for 64 bit archs. Bear in mind that
# to build for 64 bit you have to use Android API 21+ and pjsip >= 2.6.
# check the build compatibility matrix in the readme and in the issues for further reference.
TARGET_ARCHS=("armeabi-v7a" "x86" "arm64-v8a" "x86_64")

###############################################################################
###########################      ANDROID APIs       ###########################
###############################################################################

# Android APIs to setup
SETUP_ANDROID_APIS=("23" "25")
BUILD_TOOLS_VERSION=25

# Target Android API level
TARGET_ANDROID_API=25

###############################################################################
##########################      CONFIGURATION       ###########################
###############################################################################

# Toggles used only by prepare-build-system script
# Set the value to 1 to enable the feature or to another value to disable it
# Useful when you need to update or restore some sources or packages

# Updates and installs all the required packages on the system
SETUP_PACKAGES=1

# Download a fresh copy of Android NDK. Any existing NDK will be replaced
DOWNLOAD_NDK=1

# Download a fresh copy of Android SDK. Any existing SDK will be replaced
DOWNLOAD_SDK=1

# Download Android APIs defined in SETUP_ANDROID_APIS
DOWNLOAD_ANDROID_APIS=1

# Download a fresh copy of PJSIP sources. Any existing files will be deleted
DOWNLOAD_PJSIP=1

# Patch PjSip and enable g729 codec
ENABLE_G729=1

# Patch PjSip to use a fixed Call-ID --- see README.md in patches/fixed_callid folder
USE_FIXED_CALLID=1

# Downloads and compiles a fresh copy of SWIG
DOWNLOAD_SWIG=1

# Downloads a fresh copy of OpenSSH. Any existing files will be deleted
DOWNLOAD_OPENSSL=1

# Downloads a fresh copy of OpenH264. Any existing files will be deleted
DOWNLOAD_OPENH264=1

# DEPRECATED -- LIBYUV is inlcuded in PjSip >= 2.6
# Downloads a fresh copy of libyuv. Any existing files will be deleted
DOWNLOAD_LIBYUV=0

# Downloads a fresh copy of Opus. Any existing files will be deleted
DOWNLOAD_OPUS=1

# Remove Tools directory after build
REMOVE_TOOLS=0

# Set permission on output directory -- FOR DOCKER USE
SET_PERMISSIONS=0

# Set the name of the user on the host machine
OWNER="aenon"
